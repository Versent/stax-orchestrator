AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: >
  Versent Created Stepfunctions for interacting with Stax
  @richardkeit for questions

Parameters:
  PythonLoggingLevel:
    Type: String
    Description: Python logging level for Lambda functions
    Default: INFO
    AllowedValues:
      - INFO
      - DEBUG
      - WARNING
      - ERROR
      - CRITICAL

Resources:
  WorkloadDeployerStateMachine:
    Type: AWS::Serverless::StateMachine
    Properties:
      DefinitionUri: statemachine/workload_deployer.asl.json
      Tracing:
        Enabled: true
      DefinitionSubstitutions:
        ValidateInputLambdaArn: !GetAtt ValidateInputLambda.Arn
        CreateWorkloadLambdaArn: !GetAtt CreateWorkloadLambda.Arn
        TaskFactoryArn: !GetAtt TaskWatcherStateMachine.Arn
      Role: !GetAtt WorkloadDeployerStateMachineRole.Arn

  WorkloadDeployerStateMachineRole:
    Type: AWS::IAM::Role
    Properties:
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AWSXrayWriteOnlyAccess
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: !Sub states.${AWS::Region}.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: WorkloadDeployerStateMachinePolicy
          PolicyDocument:
            Statement:
              - Effect: Allow
                Action: lambda:InvokeFunction
                Resource:
                  - !GetAtt ValidateInputLambda.Arn
                  - !GetAtt CreateWorkloadLambda.Arn
              - Effect: Allow
                Action: states:StartExecution
                Resource:
                  - !Ref TaskWatcherStateMachine
              - Effect: Allow
                Action:
                - events:PutTargets
                - events:PutRule
                - events:DescribeRule
                Resource:
                - !Sub arn:${AWS::Partition}:events:${AWS::Region}:${AWS::AccountId}:rule/StepFunctionsGetEventsForStepFunctionsExecutionRule

  TaskWatcherStateMachine:
    Type: AWS::Serverless::StateMachine
    Properties:
      DefinitionUri: statemachine/task_watcher.asl.json
      Tracing:
        Enabled: true
      DefinitionSubstitutions:
        GetTaskStatusArn: !GetAtt GetTaskStatusLambda.Arn
      Policies:
        - LambdaInvokePolicy:
            FunctionName: !Ref GetTaskStatusLambda

  ValidateInputLambda:
    Type: AWS::Serverless::Function
    Properties:
      Description: Validate user input required to create/update workloads
      CodeUri: functions/validate_input/
      Handler: app.lambda_handler
      Runtime: python3.9
      MemorySize: 128
      Tracing: Active
      Layers:
        - !Ref StaxLibLayer
      Environment:
        Variables:
          LOG_LEVEL: !Ref PythonLoggingLevel
      Architectures:
        - arm64

  CreateWorkloadLambda:
    Type: AWS::Serverless::Function
    Properties:
      Description: Function to callback to required factories
      CodeUri: functions/create_workload/
      Handler: app.lambda_handler
      Runtime: python3.9
      Tracing: Active
      MemorySize: 256
      Layers:
        - !Ref StaxLibLayer
      Timeout: 60
      Environment:
        Variables:
          LOG_LEVEL: !Ref PythonLoggingLevel
      Architectures:
        - arm64

  GetTaskStatusLambda:
    Type: AWS::Serverless::Function
    Properties:
      Description: Validate user input required to create/update workloads
      CodeUri: functions/get_task_status/
      Handler: app.lambda_handler
      Runtime: python3.9
      MemorySize: 128
      Tracing: Active
      Layers:
        - !Ref StaxLibLayer
      Environment:
        Variables:
          LOG_LEVEL: !Ref PythonLoggingLevel
      Architectures:
        - arm64

  StaxLibLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName: stax-orchestrator-shared-lib-layer
      ContentUri: lambda_layer
      CompatibleRuntimes:
        - python3.9
      RetentionPolicy: Delete
    Metadata:
      BuildMethod: python3.9
      BuildArchitecture: arm64

  StaxLibLayerPermission:
    Type: AWS::Lambda::LayerVersionPermission
    Properties:
      Action: lambda:GetLayerVersion
      LayerVersionArn: !Ref StaxLibLayer
      Principal: !Ref AWS::AccountId

Outputs:
  WorkloadDeployerArn:
    Description: Stax workload deployer arn
    Value: !Ref WorkloadDeployerStateMachine

  TaskWatcherArn:
    Description: Stax task watcher arn
    Value: !Ref TaskWatcherStateMachine
