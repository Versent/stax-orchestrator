
{
    "Comment": "State machine for creating stax workloads.",
    "StartAt": "Validate Input",
    "States": {
        "Validate Input": {
            "Type": "Task",
            "Comment": "Validate input for required attributes.",
            "Next": "Create Workload",
            "Resource": "${ValidateInputLambdaArn}",
            "Retry": [
                {
                    "ErrorEquals": [
                        "Lambda.ServiceException",
                        "Lambda.AWSLambdaException",
                        "Lambda.SdkClientException",
                        "Lambda.Unknown"
                    ],
                    "IntervalSeconds": 15,
                    "MaxAttempts": 5,
                    "BackoffRate": 1.5
                }
            ]
        },
        "Create Workload": {
            "Type": "Task",
            "Comment": "Trigger Stax Api to create a workload.",
            "Next": "Check Task Status",
            "Resource": "${CreateWorkloadLambdaArn}",
            "ResultSelector": {
                "create_workload_response.$": "$.Detail"
            },
            "Retry": [
                {
                    "ErrorEquals": [
                        "Lambda.ServiceException",
                        "Lambda.AWSLambdaException",
                        "Lambda.SdkClientException",
                        "Lambda.Unknown"
                    ],
                    "IntervalSeconds": 15,
                    "MaxAttempts": 5,
                    "BackoffRate": 1.5
                }
            ]
        },
        "Check Task Status": {
            "Type": "Task",
            "Comment": "Trigger task factory to monitor and report on task status.",
            "TimeoutSeconds": 7200,
            "Resource": "arn:aws:states:::states:startExecution.sync:2",
            "Parameters": {
                "Input": {
                    "workload_name.$": "$.create_workload_response.Workload.Name",
                    "workload_id.$": "$.create_workload_response.Workload.WorkloadId",
                    "task_id.$": "$.create_workload_response.Workload.TaskId"
                },
                "StateMachineArn":"${TaskFactoryArn}"
            },
            "Retry": [
              {
                "ErrorEquals": [
                    "Lambda.ServiceException",
                    "Lambda.AWSLambdaException",
                    "Lambda.SdkClientException",
                    "Lambda.Unknown"
                ],
                "IntervalSeconds": 2,
                "MaxAttempts": 5,
                "BackoffRate": 1
              }
            ],
            "End": true
          }
    }
}
